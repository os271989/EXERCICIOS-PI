<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.20" xml:lang="pt">
  <compounddef id="_funcoes_8c" kind="file" language="C++">
    <compoundname>Funcoes.c</compoundname>
    <includes refid="_funcao_8h" local="yes">Funcao.h</includes>
    <includes local="no">stdio.h</includes>
    <incdepgraph>
      <node id="2">
        <label>Funcao.h</label>
        <link refid="_funcao_8h"/>
      </node>
      <node id="1">
        <label>Funcoes.c</label>
        <link refid="_funcoes_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_funcoes_8c_1ad0e3c2dd3d14f894fac5954fa971e08a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calcDivisores</definition>
        <argsstring>(int x)</argsstring>
        <name>calcDivisores</name>
        <param>
          <type>int</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calcDivisores: Recebe um valor e contem um ciclo para procurar dentro desse valor os seus divisores Ciclo &apos;for&apos; para mostrar todos os divisores encontrados dentro do valor param x --&gt; Recebe o valor introduzido pelo utilizador </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Funcoes.c" line="18" column="6" bodyfile="Funcoes.c" bodystart="18" bodyend="31"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Funcao que vai procurar os divisores dentro do valor introduzido \email <ulink url="mailto:a20844@alunos.ipca.pt">a20844@alunos.ipca.pt</ulink>. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Oscar Araujo </para>
</simplesect>
<simplesect kind="date"><para>3 December 2020 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************/</highlight></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_funcao_8h" kindref="compound">Funcao.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_funcoes_8c_1ad0e3c2dd3d14f894fac5954fa971e08a" kindref="member">calcDivisores</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x)</highlight></codeline>
<codeline lineno="19"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Divisores<sp/>de<sp/>%3i:<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>x);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>1;<sp/>i<sp/>&lt;=<sp/>x;<sp/>i++)</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(x<sp/>%<sp/>i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%-3d<sp/>\n&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="Funcoes.c"/>
  </compounddef>
</doxygen>
